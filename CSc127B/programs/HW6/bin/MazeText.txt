Chris Bohlman, CSC 127B-001B
Homework #6 - Fun with Mazes
Instructor: Patrick Homer
TA: Nathaniel Hendrix
Due Date: 10/14/2016


This collection of classes was written in order to generate a maze based off of user input.
The classes include Program6, MazeHolder,ArrayStack, and Location.

First, Program6 accepts input in thef orm of the desired number of rows and number of columns.
Then, Program6 calls upon MazeHolder and creates a new MazeHolder object with those parameters.
Then, MazeHolder generates an array of a maze based on an ArrayList that functions as a stack,
declared in ArrayStack. The ArrayList is made up of different Location objects, and those
have a getRow and getColumn methods (as well as setters) in the Location class. The ArrayStack 
class has an itemPush method, itemPop method, isEmpty method, size method, and topPeek method,
so it functions similar to a stack. The MazeHolder class just has one method (mazeGenerate) 
that outputs the maze. A more throurough explanation of that method is avaiable with the
MazeHolder.java file. Finally, the Program6 class just has the main method that arguments are
passed to.

I used JDE 8.0_91, wrote the program through Eclipse, and was on a Windows
10 laptop. To test this program, the Program6, MazeHolder,ArrayStack, and Location classes 
must be in the same folder as each other.

No known bugs exist, as I spent much time writing this. However, edge cases are
probably going to mess me up again, which is unfortunate, as I think I have more than enough
tests to test everything.

I should have seperate the mazeGenerate method further into different methods, but it was so 
complex and intertwined, that it just became easier to output the maze in said method.